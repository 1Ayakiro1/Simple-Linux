linux_term_translations = {
    "ru": {
        "intro_in_terminal": """<span size='24000' weight='bold'>Терминал в Linux</span>

Терминал в Linux — это программа, которая позволяет управлять системой через текстовые команды. Он даёт доступ ко всем функциям компьютера, от работы с файлами до настройки программ. Это как центр управления, который кажется сложным, но с базовыми командами становится понятным даже новичкам.

<span size='24000' weight='bold'>Что такое терминал?</span>

Терминал — это текстовый интерфейс, где вы вводите команды для взаимодействия с системой Linux. Он работает с файловой структурой, начиная с корневой папки /, и позволяет выполнять задачи, такие как копирование файлов, установка программ или проверка состояния системы. Популярные терминалы, такие как GNOME Terminal или Konsole, входят в большинство дистрибутивов.

<span size='24000' weight='bold'>Зачем он нужен?</span>

Терминал ускоряет работу и даёт больше контроля над системой, чем графические интерфейсы. Он позволяет выполнять сложные задачи одной строкой, автоматизировать процессы и управлять настройками. Для новичков терминал упрощает выполнение инструкций из интернета, таких как установка пакетов или исправление ошибок.

<span size='24000' weight='bold'>Почему это важно для новичков?</span>

Понимание терминала помогает новичкам чувствовать себя увереннее в Linux. Освоив базовые команды, вы сможете быстро управлять файлами, устанавливать программы и решать проблемы. В следующих разделах мы разберём простые команды и их применение для повседневной работы.""",


        "auto_and_scripts": """<span size='24000' weight='bold'>Автоматизация и скрипты в Linux</span>

Автоматизация и скрипты в Linux позволяют выполнять повторяющиеся задачи быстрее, используя текстовые команды. Скрипты — это небольшие программы, которые объединяют команды для автоматического выполнения действий. Это как способ научить систему работать за вас, что полезно даже для новичков.

<span size='24000' weight='bold'>Что такое автоматизация и скрипты?</span>

Автоматизация в Linux — это процесс, при котором задачи, такие как копирование файлов или установка программ, выполняются без ручного вмешательства. Скрипты — это файлы с командами, написанными на языке, таком как Bash, которые терминал выполняет по порядку. Например, скрипт может автоматически обновлять систему или переименовывать файлы. Они сохраняются с расширением .sh и запускаются в терминале.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Автоматизация экономит время и снижает ошибки при выполнении рутинных задач. Скрипты просты для изучения, а Bash встроен в большинство дистрибутивов Linux, таких как Ubuntu или Fedora. Новички могут начать с базовых скриптов, копируя готовые примеры. Однако написание сложных скриптов требует знаний, а ошибки в коде могут повредить файлы. Используйте только проверенные скрипты из надёжных источников, чтобы избежать проблем.
Как использовать скрипты для автоматизации

Создайте скрипт в текстовом редакторе, например, командой nano script.sh, и добавьте команды, такие как apt update для обновления системы. Сделайте файл исполняемым командой chmod +x script.sh и запустите его через ./script.sh. Простые скрипты можно найти в интернете или в репозиториях, таких как GitHub. Графические инструменты, например, для планирования задач, также помогают автоматизировать процессы без написания кода.""",


        "files_and_directories": """<span size='24000' weight='bold'>Файлы и директории в Linux</span>

Файлы и директории в Linux — это основа хранения данных на вашем компьютере. Файлы содержат информацию, такую как документы или программы, а директории — это папки, которые их организуют. Это как шкаф с полками, где всё упорядочено для удобной работы, понятной даже новичкам.

<span size='24000' weight='bold'>Что такое файлы и директории?</span>

В Linux всё хранится в файловой системе, которая начинается с корневой директории /. Файлы — это любые данные, от текстовых документов до исполняемых программ, а директории — это контейнеры, содержащие файлы или другие директории. Например, /home/пользователь хранит ваши личные файлы, а /etc содержит настройки системы. Терминал и файловые менеджеры, такие как Nautilus, помогают работать с ними.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Файловая система Linux гибкая и позволяет легко организовать данные через терминал или графические интерфейсы. Она поддерживает права доступа, что повышает безопасность. Новичкам структура может показаться сложной из-за множества директорий, таких как /var или /usr. Неправильное изменение системных файлов может вызвать проблемы, поэтому важно быть осторожным и использовать проверенные команды.

<span size='24000' weight='bold'>Как работать с файлами и директориями</span>

В терминале команды, такие как ls для просмотра содержимого или mv для перемещения файлов, упрощают управление. Например, mkdir новая_папка создаёт директорию, а cp файл1 файл2 копирует файл. Графические файловые менеджеры, такие как Dolphin, позволяют делать то же самое через перетаскивание или клики. Начинайте с личной папки /home/пользователь, чтобы безопасно экспериментировать.""",


        "lifehacks": """<span size='24000' weight='bold'>Лайфхаки в терминале Linux</span>

Лайфхаки в терминале Linux — это простые приёмы и команды, которые ускоряют работу с системой. Они помогают выполнять задачи быстрее, автоматизировать действия и упрощать управление файлами или программами. Это как шпаргалка, которая делает терминал удобным даже для новичков.

<span size='24000' weight='bold'>Что такое лайфхаки в терминале?</spam>.

Лайфхаки — это короткие команды или трюки, которые упрощают работу в терминале, текстовом интерфейсе Linux. Они позволяют быстрее перемещаться по файловой системе, находить файлы или управлять процессами. Например, использование автодополнения клавишей Tab или повтор команд стрелкой вверх экономит время. Такие приёмы подходят для всех дистрибутивов, таких как Ubuntu или Fedora.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Лайфхаки делают терминал дружелюбнее, ускоряя выполнение задач без сложных скриптов. Они просты для запоминания и помогают новичкам освоиться. Однако некоторые трюки требуют практики, чтобы не запутаться, а неверные команды могут повредить файлы. Используйте только проверенные советы из надёжных источников, таких как документация дистрибутива, чтобы избежать ошибок.

<span size='24000' weight='bold'>Как использовать лайфхаки в терминале</span>

Нажмите Tab для автодополнения имён файлов или команд, чтобы не печатать их полностью. Используйте !! для повтора последней команды или cd - для возврата в предыдущую директорию. Команда find . -name "имя_файла" быстро находит файлы, а Ctrl+R ищет в истории команд. Сохраняйте полезные команды в текстовый файл или используйте алиасы, например, alias ll='ls -l' для упрощённого вывода. Практикуйтесь в безопасной папке, такой как /home/пользователь, чтобы освоить трюки.""",


        "navigation": """<span size='24000' weight='bold'>Навигация в интерфейсе терминала Linux</span>

Навигация в интерфейсе терминала Linux — это умение эффективно использовать сам терминал для ввода команд, управления историей и редактирования текста. Она помогает быстрее работать с командами и исправлять ошибки. Это как освоение клавиатуры, которое делает терминал удобным даже для новичков.

<span size='24000' weight='bold'>Что такое навигация в интерфейсе терминала?</span>

Навигация в терминале — это взаимодействие с его текстовым интерфейсом, где вы вводите команды для управления системой Linux. Она включает перемещение по строке ввода, повтор ранее использованных команд и автодополнение. Программы, такие как Bash, управляют этим процессом в терминалах, таких как GNOME Terminal или Konsole, на любых дистрибутивах, например Ubuntu.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Навигация в терминале ускоряет ввод команд и исправление ошибок без мыши. Она проста для освоения и экономит время благодаря автодополнению и истории команд. Однако новичкам нужно запомнить комбинации клавиш, а случайное нажатие может сбить процесс. Практика в безопасной среде помогает избежать ошибок и освоить трюки.

<span size='24000' weight='bold'>Как использовать навигацию в терминале</span>

Используйте клавишу Tab для автодополнения названий команд или файлов, чтобы не вводить их полностью. Стрелки вверх и вниз листают историю команд, а Ctrl+R ищет в ней по ключевому слову. Перемещайтесь по строке ввода с помощью Ctrl+Стрелка для прыжков по словам или Home/End для перехода в начало и конец. Команда clear очищает экран, а Ctrl+C останавливает выполнение. Практикуйтесь в терминале, начиная с простых команд, таких как ls.""",


        "network": """<span size='24000' weight='bold'>Работа с сетью в терминале Linux</span>

Работа с сетью в терминале Linux — это использование текстовых команд для управления интернет-соединением, проверки сети или настройки подключений. Это позволяет быстро диагностировать проблемы или взаимодействовать с удалёнными серверами. Это как пульт управления сетью, понятный даже новичкам с базовыми командами.

<span size='24000' weight='bold'>Что такое работа с сетью?</span>

Работа с сетью в терминале включает проверку состояния интернета, настройку соединений или доступ к удалённым ресурсам. Команды, такие как ping или curl, помогают тестировать подключение, а ssh позволяет подключаться к другим компьютерам. Эти инструменты работают в любом дистрибутиве Linux, таком как Ubuntu или Fedora, через терминал, например GNOME Terminal.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Работа с сетью через терминал быстрая и даёт точные данные о подключении, что удобно для новичков, следуя простым инструкциям. Команды универсальны и работают без графического интерфейса. Однако неправильные настройки могут нарушить соединение, а некоторые команды требуют понимания сети. Используйте проверенные команды из документации, чтобы избежать ошибок.

<span size='24000' weight='bold'>Как работать с сетью в терминале</span>

Команда ping google.com проверяет доступ к интернету, показывая, есть ли соединение. Используйте ifconfig или ip addr для просмотра сетевых интерфейсов и их адресов""",


        "processes": """<span size='24000' weight='bold'>Процессы в терминале Linux</span>

Процессы в терминале Linux — это запущенные программы или задачи, которыми можно управлять через текстовые команды. Это позволяет контролировать работу системы, завершать программы или проверять их состояние. Это как пульт управления задачами, понятный новичкам с базовыми командами.

<span size='24000' weight='bold'>Что такое процессы?</span>

Процесс — это любая программа или скрипт, выполняющиеся в системе Linux. Каждый процесс имеет уникальный идентификатор (PID) и может быть фоновым или активным. Команды, такие как ps или top, показывают, какие процессы запущены, а kill завершает их. Это работает в любом дистрибутиве, таком как Ubuntu или Fedora, через терминал, например GNOME Terminal.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Управление процессами через терминал быстрое и даёт полный контроль над системой, что удобно для новичков с простыми инструкциями. Команды позволяют находить и останавливать зависшие программы. Однако неправильное завершение системных процессов может нарушить работу системы. Используйте команды из проверенных источников, чтобы избежать проблем.

<span size='24000' weight='bold'>Как работать с процессами в терминале</span>

Команда ps aux показывает список всех запущенных процессов с их PID. Используйте top или htop для просмотра процессов в реальном времени с информацией о нагрузке. Завершайте процесс командой kill PID, где PID — это номер процесса. Для фонового запуска программы добавьте & после команды, например, firefox &. Практикуйтесь с безопасными процессами, такими как текстовый редактор, чтобы освоить управление.""",


        "utils": """<span size='24000' weight='bold'>Утилиты в терминале Linux</span>

Утилиты в терминале Linux — это небольшие программы, выполняющие конкретные задачи, такие как работа с файлами, анализ системы или обработка текста. Они помогают быстро решать повседневные задачи через текстовые команды. Это как набор инструментов, понятный новичкам с базовыми навыками.

<span size='24000' weight='bold'>Что такое утилиты?</span>

Утилиты — это встроенные или устанавливаемые команды, которые выполняют узкие функции в терминале Linux. Например, grep ищет текст в файлах, df показывает свободное место на диске, а cat отображает содержимое файла. Они работают в любом дистрибутиве, таком как Ubuntu или Fedora, через терминал, например GNOME Terminal.

<span size='24000' weight='bold'>Плюсы и минусы</span>

Утилиты быстрые и мощные, позволяя выполнять задачи без графического интерфейса, что удобно для новичков, следуя простым примерам. Они экономят время и ресурсы системы. Однако запоминание команд требует практики, а неверное использование может повредить файлы. Пользуйтесь утилитами из документации или надёжных источников, чтобы избежать ошибок.

<span size='24000' weight='bold'>Как использовать утилиты в терминале</span>

Команда lsblk показывает подключённые диски, а du -h оценивает размер папок. Используйте grep слово файл для поиска текста или wc -l файл для подсчёта строк. Команда man утилита, например man grep, открывает справочную информацию. Практикуйтесь с простыми утилитами, такими как cat или ls, в безопасной папке, например /home/пользователь, чтобы освоить их.""",




    },
    "en": {
        "intro_in_terminal": "Introduction to the Linux terminal...",
        "auto_and_scripts": "This section covers automation and scripts in Linux...",
        "files_and_directories": "Learn how to work with files and directories in Linux...",
        "lifehacks": "Useful terminal lifehacks...",
        "navigation": "Commands and tips for terminal navigation...",
        "network": "Network management and commands in Linux...",
        "processes": "Managing processes in the Linux terminal...",
        "utils": "Useful utilities and tools in the terminal...",
    },
    "zh": {
        "intro_in_terminal": "TODO: translate",
        "auto_and_scripts": "TODO: translate",
        "files_and_directories": "TODO: translate",
        "lifehacks": "TODO: translate",
        "navigation": "TODO: translate",
        "network": "TODO: translate",
        "processes": "TODO: translate",
        "utils": "TODO: translate",
    },
    "ja": {
        "intro_in_terminal": "TODO: translate",
        "auto_and_scripts": "TODO: translate",
        "files_and_directories": "TODO: translate",
        "lifehacks": "TODO: translate",
        "navigation": "TODO: translate",
        "network": "TODO: translate",
        "processes": "TODO: translate",
        "utils": "TODO: translate",
    },
    "fr": {
        "intro_in_terminal": "TODO: translate",
        "auto_and_scripts": "TODO: translate",
        "files_and_directories": "TODO: translate",
        "lifehacks": "TODO: translate",
        "navigation": "TODO: translate",
        "network": "TODO: translate",
        "processes": "TODO: translate",
        "utils": "TODO: translate",
    },
    "de": {
        "intro_in_terminal": "TODO: translate",
        "auto_and_scripts": "TODO: translate",
        "files_and_directories": "TODO: translate",
        "lifehacks": "TODO: translate",
        "navigation": "TODO: translate",
        "network": "TODO: translate",
        "processes": "TODO: translate",
        "utils": "TODO: translate",
    },
} 